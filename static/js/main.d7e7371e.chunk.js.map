{"version":3,"sources":["ListItems.js","Header.js","App.js","reportWebVitals.js","index.js"],"names":["props","listt","items","map","item","console","log","className","type","value","noteText","id","key","onChange","e","updateNote","target","class","aria-hidden","onClick","deleteItem","duration","easing","useState","listItems","currentItem","state","setstate","onSubmit","preventDefault","newItem","newItems","placeholder","maxlength","Date","now","filteredItems","filter","text","newlist","App","Header","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gTAIe,WAACA,GACX,IAAMC,EAAOD,EAAME,MAAMC,KAAI,SAAAC,GAGnB,OADAC,QAAQC,IAAIN,GACL,qBAAKO,UAAU,OAAf,SACG,8BAIG,uBAAOC,KAAK,OAAOC,MAAOL,EAAKM,SAAUC,GAAIP,EAAKQ,IAClDC,SACI,SAACC,GAAD,OAAKd,EAAMe,WAAWD,EAAEE,OAAOP,MAAOL,EAAKQ,QAG/C,sBAAMK,MAAM,sBACXC,cAAY,OACZC,QAAS,kBAAInB,EAAMoB,WAAWhB,EAAKQ,YAZfR,EAAKQ,QAiBlD,OACI,8BACI,cAAC,IAAD,CAAUS,SAAU,IAAKC,OAAO,cAAhC,SACKrB,OC1BF,aAAK,IAAD,EACSsB,mBACtB,CAACC,UAAU,GACTC,YAAY,CACPf,SAAS,GACTE,IAAK,MALC,mBACVc,EADU,KACHC,EADG,KAiEf,OACJ,sBAAKpB,UAAU,YAAf,UACK,uBAAMA,UAAU,yBAAyBqB,SA9CxC,SAAiBd,GACfA,EAAEe,iBACF,IAAMC,EAAQJ,EAAMD,YAEpB,GADApB,QAAQC,IAAIwB,GACU,KAAnBA,EAAQpB,SAAc,CACrBL,QAAQC,IAAI,aAAaoB,EAAMF,WAC/B,IAAMO,EAAQ,sBAAML,EAAMF,WAAZ,CAAuBM,IACrCH,EAAS,CACLH,UAAUO,EACVN,YAAY,CACRf,SAAS,GACTE,IAAI,MAGZP,QAAQC,IAAIoB,KAgCnB,UACK,uBAAOlB,KAAK,OAAOwB,YAAY,aAAaC,UAAU,KAAKxB,MAAOiB,EAAMD,YAAYf,SAAUG,SA1DnG,SAAsBC,GACjBa,EAAS,2BACFD,GADC,IAEJD,YAAY,CACRf,SAASI,EAAEE,OAAOP,MAClBG,IAAKsB,KAAKC,aAsDjB,wBAAQ3B,KAAK,SAAb,oBAEL,cAAC,EAAD,CAAWN,MAAOwB,EAAMF,UACxBJ,WA/BA,SAAoBR,GAChB,IAAMwB,EAAgBV,EAAMF,UAAUa,QAAO,SAAAjC,GAAI,OAAIA,EAAKQ,MAAMA,KAChEe,EAAS,2BACJD,GADG,IAENF,UAAUY,MA4BhBrB,WAtBA,SAAoBuB,EAAK1B,GACrB,IAAM2B,EAAQb,EAAMF,UAAUrB,KAAI,SAAAC,GAM7B,OAJGA,EAAKQ,MAAMA,IAEbR,EAAKM,SAAS4B,GAERlC,KAEVuB,EAAS,2BACFD,GADC,IAEJF,UAAUe,YCnDXC,E,uKAPb,OACE,qBAAKjC,UAAU,MAAf,SACG,cAACkC,EAAD,U,GAJWC,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d7e7371e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './ListItems.css';\r\nimport FlipMove from 'react-flip-move';\r\n// const people=[\"Sarah\",\"Jessy\",\"Elyan\",\"Lilly\"]\r\nexport default (props)=>{\r\n     const listt= props.items.map(item=>\r\n           {\r\n               console.log(props);\r\n               return <div className=\"list\" key={item.key}>\r\n                         <p>\r\n                             {/* {people.filter(person=>person.includes('l')).map(filtredname=>\r\n                                <li>{filtredname}</li>\r\n                                )} */}\r\n                            <input type=\"text\" value={item.noteText} id={item.key}\r\n                            onChange={\r\n                                (e)=>props.updateNote(e.target.value, item.key)\r\n                            }\r\n                            />  \r\n                            <span class=\"fa fa-trash my-icon\"\r\n                             aria-hidden=\"true\" \r\n                             onClick={()=>props.deleteItem(item.key)}></span>\r\n                         </p>\r\n                      </div>\r\n           }\r\n      )\r\n    return(\r\n        <div>\r\n            <FlipMove duration={400} easing=\"ease-in-out\">\r\n                {listt}\r\n            </FlipMove>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport ListItems  from './ListItems';\r\nexport default ()=>{\r\n  const [state, setstate] = useState(\r\n      {listItems:[],\r\n        currentItem:{\r\n             noteText:'',\r\n             key: '',\r\n      }});\r\n\r\n             //   ---------------- hundelInput---------------------------\r\n\r\n     function  hundelInput(e){\r\n          setstate({\r\n              ...state,\r\n              currentItem:{\r\n                  noteText:e.target.value,\r\n                  key: Date.now(),\r\n                }\r\n          });\r\n      }\r\n            //   ---------------- addItem---------------------------\r\n\r\n      function addItem(e){\r\n        e.preventDefault();\r\n        const newItem=state.currentItem;\r\n        console.log(newItem);\r\n        if(newItem.noteText!==''){\r\n            console.log('LIST ITEMS'+state.listItems)\r\n            const newItems =[...state.listItems, newItem]\r\n            setstate({\r\n                listItems:newItems,\r\n                currentItem:{\r\n                    noteText:'',\r\n                    key:'',\r\n                }\r\n            })\r\n            console.log(state);\r\n        }\r\n      }    \r\n        \r\n      //   ---------------- deleteItem---------------------------\r\n  \r\n      function deleteItem(key){\r\n          const filteredItems = state.listItems.filter(item => item.key!==key)\r\n          setstate({\r\n            ...state,\r\n            listItems:filteredItems,\r\n          })\r\n      }\r\n\r\n    //   ---------------- updateNote---------------------------\r\n\r\n      function updateNote(text,key) {\r\n          const newlist=state.listItems.map(item=>\r\n           { \r\n               if(item.key===key) \r\n               {\r\n                item.noteText=text;\r\n               }\r\n               return item\r\n            })\r\n            setstate({\r\n                ...state,\r\n                listItems:newlist   \r\n            })\r\n      }\r\n    return(\r\n<div className=\"container\">\r\n     <form className=\"form-inline to-do-form\" onSubmit={addItem}>\r\n          <input type=\"text\" placeholder=\"what to do\" maxlength=\"35\" value={state.currentItem.noteText} onChange={hundelInput}/>\r\n           <button type=\"submit\" >Add</button>\r\n      </form>\r\n      <ListItems items={state.listItems} \r\n      deleteItem={deleteItem}\r\n      updateNote={updateNote}\r\n      />\r\n</div>\r\n    );\r\n}","import React,{Component} from'react';\nimport './App.css';\nimport Header from './Header';\n\nclass App extends Component{\n  render(){\n  return (\n    <div className=\"app\">\n       <Header />\n    </div>\n  );\n}}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}